{
  "title": "Parse Options",
  "description": "Parse options can be used to configure how Marko's parser should parse a tag.\n\nThese options set in the [parseOptions](./tag.definitions.json) property of a [tag definition](./tag.definitions.json)",
  "$id": "https://saulo.engineer/contributes/marko-js/schemas/property-groups/parse-options",
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "$defs": {
    "common-properties": {
      "properties": {
        "import": {
          "type": "string",
          "description": "Specifies a module to import when the tag is parsed, which can initialize state or register global behaviors."
        },
        "text": {
          "type": "boolean",
          "description": "When true, text nodes within the tag are preserved exactly as written, including whitespace characters."
        },
        "statement": {
          "type": "boolean",
          "description": "Marks the tag as containing a statement, which may influence how its content is evaluated or executed."
        }
      }
    },
    "camelCased-properties": {
      "properties": {
        "openTagOnly": {
          "type": "boolean",
          "description": "Determines if the tag should only have an opening tag without a matching closing tag."
        },
        "preserveWhitespace": {
          "type": "boolean",
          "description": "Determines whether whitespace is preserved in the tag's output. Useful for tags where spacing is significant."
        },
        "rawOpenTag": {
          "type": "boolean",
          "description": "Allows the tag to be self-closing or to omit its closing tag in the markup."
        }
      }
    },
    "dashed-properties": {
      "properties": {
        "open-tag-only": {
          "$ref": "#/$defs/camelCased-properties/properties/openTagOnly"
        },
        "preserve-whitespace": {
          "$ref": "#/$defs/camelCased-properties/properties/preserveWhitespace"
        },
        "raw-open-tag": {
          "$ref": "#/$defs/camelCased-properties/properties/rawOpenTag"
        }
      }
    }
  },
  "camelCased": {
    "title": "Parse Options :: camelCased",
    "description": "Parse options can be used to configure how Marko's parser should parse a tag.\n\nThese options set in the [parseOptions](./tag.definitions.json) property of a [tag definition](./tag.definitions.json)",
    "allOf": [
      {
        "$ref": "#/$defs/common-properties"
      },
      {
        "$ref": "#/$defs/camelCased-properties"
      }
    ]
  },
  "dash-cased": {
    "title": "Parse Options :: dash-cased",
    "description": "Parse options can be used to configure how Marko's parser should parse a tag.\n\nThese options set in the [parseOptions](./tag.definitions.json) property of a [tag definition](./tag.definitions.json)",
    "unevaluatedProperties": false,
    "allOf": [
      {
        "$ref": "#/$defs/common-properties"
      },
      {
        "$ref": "#/$defs/dashed-properties"
      }
    ]
  },
  "type": "object",
  "anyOf": [
    {
      "unevaluatedProperties": false,
      "$ref": "#/camelCased"
    },
    {
      "unevaluatedProperties": false,
      "$ref": "#/dash-cased"
    }
  ]
}
