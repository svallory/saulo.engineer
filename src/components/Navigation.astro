---
import ResponsiveToggle from './ResponsiveToggle.astro'
import { DarkMode } from 'accessible-astro-components'
import { Image } from 'astro:assets'
import logo from '../assets/img/logo.svg'

const homeLink = 'Resume'
---

<div id="main-navigation" class="is-desktop py-8">
  <div class="container">
    <a href="/" class="flex items-center gap-2 !no-underline">
      <!-- <Image src={logo} alt="Saulo Engineer" width="120" /> -->
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1373.015 675.473" class="svg-fill"><g id="Saulo"><path fill="currentColor" d="M258.711 86.355c0 15.385-.993 34.244-19.366 34.244-15.394 0-21.849-14.392-37.739-33.251-14.401-16.874-33.767-37.222-64.057-37.222-23.339 0-47.174 13.399-47.174 41.192 0 75.933 184.723 42.185 184.723 169.236 0 67.496-62.567 115.636-147.48 115.636-50.153 0-100.803-14.889-116.693-39.703-8.442-13.4-9.932-29.777-9.932-44.17 0-6.452-.993-12.904-.993-18.859 0-15.385 9.435-22.829 18.87-22.829 16.883 0 20.359 18.363 46.181 45.659 16.883 17.867 39.229 38.214 74.485 38.214 14.401 0 30.788-3.474 41.712-12.903 8.938-7.941 16.883-19.852 16.883-35.733 0-77.918-184.227-50.125-184.227-165.762 0-60.549 55.616-109.682 136.556-109.682 37.739 0 76.968 9.926 95.837 27.792 9.435 9.43 12.414 31.266 12.414 48.14ZM568.075 342.441c0 7.444-5.462 14.393-11.918 19.853-10.924 8.933-27.808 13.896-42.705 13.896-21.352 0-42.705-10.918-49.16-37.222-.497-1.985-.497-2.978-1.49-2.978-.497 0-.993.496-2.482 2.481-19.863 25.807-51.146 37.718-80.94 37.718-39.229 0-78.458-21.341-78.458-66.007 0-22.829 11.421-46.155 35.752-60.547 24.332-14.393 58.595-23.326 81.934-33.748 15.89-7.444 37.243-19.852 37.243-42.185 0-17.371-11.917-29.281-32.277-29.281-11.421 0-21.849 3.474-30.291 9.429-27.312 18.363-29.297 46.652-50.65 46.652-16.387 0-21.849-7.941-21.849-31.267 0-13.4 2.483-28.785 9.435-37.222 16.387-20.844 69.519-25.807 94.844-25.807 51.146 0 110.734 23.326 110.734 83.873 0 33.251-2.483 63.029-2.483 95.288 0 31.267 0 45.163 22.346 46.155 7.448.496 12.414 3.474 12.414 10.918Zm-112.224-100.25c0-1.985-.497-2.978-1.49-2.978s-1.49.497-2.979 1.489c-12.911 7.94-34.263 13.896-51.643 27.296-14.4 10.422-19.366 22.333-19.366 32.755 0 17.37 12.414 29.281 30.787 29.281 14.897 0 30.291-8.934 38.235-24.815 6.456-13.4 6.456-28.289 6.456-58.066v-4.963ZM902.266 339.96c0 6.452-4.966 10.423-16.387 13.4-22.842 5.459-50.649 13.399-69.022 19.852-2.979.992-7.945 2.978-12.911 2.978-6.455 0-12.91-3.474-12.91-16.874v-24.814c0-1.489-.497-2.481-1.49-2.481-.496 0-1.489 0-2.482 1.489-20.856 29.777-50.65 42.681-80.94 42.681-26.318 0-53.629-11.414-69.52-35.732-10.924-17.371-14.4-39.208-14.4-65.511v-69.481c0-14.393-.497-24.815-3.476-32.755-2.979-7.941-8.441-12.407-18.373-16.378-5.462-2.481-15.394-4.963-15.394-13.896 0-6.948 4.966-10.422 16.387-13.4 22.842-5.459 50.65-13.4 68.526-19.852 5.462-1.985 9.435-2.978 13.407-2.978 6.456 0 12.911 3.474 12.911 16.874v150.376c0 24.815 11.421 47.148 39.726 47.148 10.925 0 22.842-3.474 32.773-13.4 16.883-16.377 22.346-44.17 22.346-94.792 0-21.34-.497-31.763-3.477-39.703-2.979-7.941-8.441-12.407-17.876-16.378-5.462-2.481-15.394-4.963-15.394-13.896 0-6.452 4.966-10.422 16.387-13.4 22.842-5.459 51.146-13.4 69.022-19.852 2.979-.993 7.945-2.978 12.911-2.978 6.455 0 12.91 3.474 12.91 16.874v153.851c0 14.393 0 24.815 2.979 32.755 2.979 7.941 8.441 12.407 18.373 16.377 5.463 2.481 15.394 4.963 15.394 13.896ZM1074.578 357.827c0 8.437-8.441 12.903-19.366 12.903H948.45c-10.925 0-19.366-4.467-19.366-12.903 0-7.444 5.462-10.423 12.414-14.393 9.435-5.459 15.394-12.904 18.373-21.341 2.483-6.948 4.966-17.37 4.966-52.11V99.259c0-14.393-.497-24.814-3.476-32.755-2.979-7.941-8.442-12.407-18.373-16.377-5.463-2.481-15.394-4.963-15.394-13.896 0-6.948 4.965-10.422 16.387-13.4 22.842-5.459 51.146-13.4 69.022-19.852 2.979-.993 7.945-2.978 12.911-2.978 6.455 0 12.91 3.474 12.91 16.874v253.109c0 34.244 2.483 45.162 4.966 52.11 2.979 8.437 8.938 15.881 18.373 21.341 6.455 3.97 12.414 6.451 12.414 14.393ZM1373.015 239.709c0 74.444-59.091 136.48-136.556 136.48-79.45 0-135.562-52.11-135.562-133.502 0-74.444 59.588-136.48 139.535-136.48 79.451 0 132.583 56.081 132.583 133.502Zm-140.528-96.776c-33.767 0-52.636 28.785-52.636 78.91 0 34.741 11.918 116.132 61.574 116.132 34.76 0 52.14-37.222 52.14-84.37 0-35.733-10.428-110.673-61.078-110.673Z"/></g><g data-name=".engineer"><path fill="currentColor" d="M57.696 592.517c0-7.831 2.364-14.354 7.101-19.578 4.729-5.216 11.34-7.831 19.834-7.831s15.014 2.615 19.589 7.831c4.568 5.224 6.856 11.747 6.856 19.578 0 7.511-2.288 13.873-6.856 19.089-4.576 5.216-11.103 7.832-19.589 7.832s-15.105-2.616-19.834-7.832c-4.737-5.216-7.101-11.578-7.101-19.089ZM151.057 557.472l-1.236-19.462 93.342-12.665c-.826-11.323-4.743-20.644-11.745-27.955-7.007-7.308-16.69-10.967-29.053-10.967-12.778 0-23.335 4.586-31.681 13.746-8.345 9.166-12.518 22.295-12.518 39.386v6.796c1.439 16.479 6.848 28.989 16.227 37.532 9.374 8.548 22.201 12.819 38.48 12.819 8.654 0 16.482-1.438 23.49-4.324 7.002-2.882 12.566-5.971 16.69-9.268 2.265 1.443 4.066 3.143 5.409 5.097 1.338 1.96 2.009 4.171 2.009 6.642 0 3.915-2.216 7.568-6.645 10.967-4.433 3.397-10.306 6.129-17.617 8.186-7.317 2.056-15.507 3.089-24.572 3.089-15.869 0-29.624-2.886-41.262-8.649-11.644-5.763-20.607-14.364-26.89-25.793-6.288-11.43-9.427-25.379-9.427-41.857 0-11.738 1.7-22.188 5.1-31.354 3.4-9.161 8.137-16.937 14.218-23.322 6.075-6.381 13.338-11.275 21.79-14.673 8.446-3.398 17.617-5.098 27.508-5.098 12.566 0 23.645 2.68 33.226 8.032 9.581 5.357 17.101 12.819 22.562 22.396 5.457 9.576 8.19 20.542 8.19 32.898 0 4.532-1.033 7.775-3.091 9.73-2.062 1.96-4.945 3.142-8.654 3.553l-103.851 14.519ZM426.136 518.858v31.508H401.41v-30.272c0-11.531-3.245-19.973-9.736-25.33-6.491-5.353-15.198-8.031-26.117-8.031-8.244 0-15.56 1.032-21.945 3.089-6.389 2.061-11.851 4.431-16.381 7.104v53.44h-24.727v-52.205c0-4.324.875-7.877 2.627-10.657 1.748-2.78 4.791-5.507 9.118-8.186 5.356-3.089 12.465-6.023 21.327-8.804 8.857-2.78 18.854-4.171 29.98-4.171 18.748 0 33.535 4.277 44.353 12.82 10.818 8.548 16.227 21.777 16.227 39.694Zm-123.631 14.519h24.727v79.079c-1.034.415-2.579.874-4.636 1.391-2.062.512-4.327.772-6.8.772-4.327 0-7.625-.879-9.891-2.626-2.27-1.747-3.4-4.581-3.4-8.495v-70.121Zm98.905 0h24.726v79.079c-1.033.415-2.627.874-4.791 1.391-2.164.512-4.38.772-6.645.772-4.535 0-7.882-.879-10.045-2.626s-3.245-4.581-3.245-8.495v-70.121ZM531.841 608.75c-11.953 0-22.978-2.317-33.071-6.951-10.098-4.633-18.236-12.201-24.417-22.704-6.181-10.503-9.272-24.403-9.272-41.702 0-15.648 3.038-28.729 9.118-39.231 6.075-10.503 14.474-18.428 25.19-23.785 10.711-5.353 22.973-8.032 36.78-8.032 9.475 0 18.183 1.188 26.117 3.553 7.93 2.37 14.575 5.305 19.936 8.804 3.091 2.062 5.611 4.378 7.572 6.95 1.956 2.578 2.936 5.715 2.936 9.422v95.452h-24.726v-95.144c-3.506-2.264-7.881-4.271-13.136-6.023-5.254-1.747-11.489-2.625-18.699-2.625-13.807 0-24.934 4.223-33.38 12.665-8.452 8.446-12.672 21.005-12.672 37.687 0 18.534 4.274 31.716 12.827 39.539 8.548 7.829 19.11 11.738 31.681 11.738 9.064 0 16.381-1.544 21.944-4.633s9.992-6.487 13.291-10.194l1.236 21.933c-3.091 3.297-7.988 6.332-14.681 9.112-6.698 2.78-14.889 4.171-24.572 4.171Zm36.162 8.958v-32.436h24.726v33.979c0 13.592-2.936 24.505-8.809 32.744-5.873 8.234-13.908 14.21-24.108 17.917s-21.689 5.56-34.462 5.56c-10.306 0-19.163-1.134-26.581-3.397-7.418-2.269-12.47-4.122-15.145-5.561-6.182-3.504-9.272-7.93-9.272-13.283 0-2.886.667-5.304 2.009-7.259 1.337-1.96 3.038-3.451 5.1-4.479 4.327 3.292 10.456 6.333 18.39 9.113 7.93 2.78 16.43 4.17 25.499 4.17 13.802 0 24.364-2.987 31.681-8.958 7.312-5.976 10.972-15.344 10.972-28.11ZM636.31 425.26c0-4.324 1.545-7.979 4.636-10.966 3.091-2.983 6.901-4.479 11.436-4.479 4.738 0 8.548 1.496 11.436 4.479 2.883 2.987 4.327 6.642 4.327 10.966s-1.444 7.983-4.327 10.966c-2.888 2.988-6.698 4.479-11.436 4.479-4.535 0-8.345-1.491-11.436-4.479-3.091-2.982-4.636-6.641-4.636-10.966Zm28.435 118.31h-24.727v-72.593c1.029-.41 2.627-.873 4.791-1.39 2.164-.512 4.481-.772 6.954-.772 4.327 0 7.572.879 9.736 2.626 2.164 1.752 3.246 4.687 3.246 8.804v63.325Zm-24.726-12.047h24.727v80.933c-1.034.415-2.579.874-4.636 1.391-2.062.512-4.327.772-6.8.772-4.327 0-7.625-.879-9.891-2.626-2.27-1.747-3.4-4.581-3.4-8.495v-71.975ZM836.593 518.858v31.508h-24.727v-30.272c0-11.531-3.245-19.973-9.736-25.33-6.49-5.353-15.197-8.031-26.117-8.031-8.243 0-15.56 1.032-21.944 3.089-6.389 2.061-11.851 4.431-16.381 7.104v53.44h-24.727v-52.205c0-4.324.874-7.877 2.627-10.657 1.749-2.78 4.791-5.507 9.118-8.186 5.355-3.089 12.465-6.023 21.326-8.804 8.857-2.78 18.854-4.171 29.98-4.171 18.748 0 33.535 4.277 44.354 12.82 10.817 8.548 16.227 21.777 16.227 39.694Zm-123.632 14.519h24.727v79.079c-1.033.415-2.579.874-4.637 1.391-2.062.512-4.326.772-6.799.772-4.327 0-7.626-.879-9.891-2.626-2.271-1.747-3.4-4.581-3.4-8.495v-70.121Zm98.906 0h24.727v79.079c-1.034.415-2.628.874-4.791 1.391-2.163.512-4.38.772-6.646.772-4.534 0-7.881-.879-10.045-2.626-2.163-1.747-3.245-4.581-3.245-8.495v-70.121ZM891.917 557.472l-1.236-19.462 93.341-12.665c-.825-11.323-4.742-20.644-11.744-27.955-7.008-7.308-16.69-10.967-29.054-10.967-12.778 0-23.335 4.586-31.681 13.746-8.345 9.166-12.518 22.295-12.518 39.386v6.796c1.439 16.479 6.848 28.989 16.227 37.532 9.374 8.548 22.2 12.819 38.48 12.819 8.654 0 16.482-1.438 23.49-4.324 7.002-2.882 12.565-5.971 16.689-9.268 2.266 1.443 4.066 3.143 5.409 5.097 1.338 1.96 2.009 4.171 2.009 6.642 0 3.915-2.217 7.568-6.645 10.967-4.434 3.397-10.307 6.129-17.618 8.186-7.316 2.056-15.507 3.089-24.571 3.089-15.869 0-29.623-2.886-41.262-8.649-11.644-5.763-20.607-14.364-26.891-25.793-6.287-11.43-9.427-25.379-9.427-41.857 0-11.738 1.7-22.188 5.1-31.354 3.4-9.161 8.138-16.937 14.218-23.322 6.075-6.381 13.339-11.275 21.79-14.673 8.447-3.398 17.618-5.098 27.508-5.098 12.566 0 23.645 2.68 33.227 8.032 9.581 5.357 17.101 12.819 22.562 22.396 5.457 9.576 8.19 20.542 8.19 32.898 0 4.532-1.033 7.775-3.091 9.73-2.062 1.96-4.945 3.142-8.654 3.553l-103.85 14.519ZM1052.33 557.472l-1.236-19.462 93.341-12.665c-.825-11.323-4.742-20.644-11.744-27.955-7.008-7.308-16.69-10.967-29.054-10.967-12.778 0-23.335 4.586-31.681 13.746-8.345 9.166-12.518 22.295-12.518 39.386v6.796c1.439 16.479 6.848 28.989 16.227 37.532 9.374 8.548 22.2 12.819 38.48 12.819 8.654 0 16.482-1.438 23.49-4.324 7.002-2.882 12.565-5.971 16.689-9.268 2.266 1.443 4.066 3.143 5.409 5.097 1.338 1.96 2.009 4.171 2.009 6.642 0 3.915-2.217 7.568-6.645 10.967-4.434 3.397-10.307 6.129-17.618 8.186-7.316 2.056-15.507 3.089-24.571 3.089-15.869 0-29.623-2.886-41.262-8.649-11.644-5.763-20.607-14.364-26.891-25.793-6.287-11.43-9.427-25.379-9.427-41.857 0-11.738 1.7-22.188 5.1-31.354 3.4-9.161 8.138-16.937 14.218-23.322 6.075-6.381 13.339-11.275 21.79-14.673 8.447-3.398 17.618-5.098 27.508-5.098 12.566 0 23.645 2.68 33.227 8.032 9.581 5.357 17.101 12.819 22.562 22.396 5.457 9.576 8.19 20.542 8.19 32.898 0 4.532-1.033 7.775-3.091 9.73-2.062 1.96-4.945 3.142-8.654 3.553l-103.85 14.519ZM1228.504 496.926v48.807h-24.727V498.78c0-4.735.874-8.495 2.627-11.275 1.749-2.78 4.685-5.507 8.81-8.186 5.355-3.499 12.672-6.535 21.944-9.113 9.272-2.572 19.573-3.861 30.907-3.861 16.483 0 24.727 4.122 24.727 12.356 0 2.062-.309 3.968-.927 5.715-.618 1.752-1.444 3.243-2.473 4.479-2.062-.41-4.743-.82-8.036-1.236-3.299-.41-6.597-.617-9.891-.617-9.48 0-17.825.979-25.035 2.935-7.216 1.96-13.189 4.276-17.927 6.95Zm-24.726 34.597 24.727 3.707v77.226c-1.033.415-2.579.874-4.637 1.391-2.062.512-4.326.772-6.799.772-4.327 0-7.626-.879-9.891-2.626-2.271-1.747-3.4-4.581-3.4-8.495v-71.975Z"/></g></svg>
      <span class="font-bold">Accessible Astro</span>
    </a>
    <div
      class="noise-light wrapper rounded-full bg-white/90 px-6 py-2 shadow-lg shadow-zinc-800/5 ring-1 ring-zinc-900/5 backdrop-blur">
      <nav class="desktop-menu" aria-label="Main navigation desktop">
        <ul class="menu">
          <slot />
        </ul>
      </nav>
      <DarkMode />
      <ResponsiveToggle />
    </div>
    <nav class="mobile-menu" aria-label="Main navigation mobile">
      <ul class="menu">
        <slot />
      </ul>
    </nav>
  </div>
</div>

<script>
  const homeLinkLabel = 'Resume'

  document.addEventListener('astro:page-load', () => {
    // variables
    const mainNav = document.querySelector('#main-navigation')
    const mainMenu = mainNav.querySelector('ul')
    const dropdownMenus = [...document.querySelectorAll('.has-dropdown button')]

    // functions
    const setActiveMenuItem = () => {
      const mobileDesktopMenus = mainNav.querySelectorAll('nav > ul')
      const currenPathname = window.location.pathname

      mobileDesktopMenus.forEach((menu) => {
        const menuItems = [...menu.querySelectorAll('a:not([rel*="external"])')] as HTMLAnchorElement[]

        menuItems.forEach((menuItem) => {
          if (
            currenPathname.includes(menuItem.pathname.replaceAll('/', '')) &&
            menuItem.textContent !== homeLinkLabel
          ) {
            menuItem.classList.add('is-active')
            menuItem.setAttribute('aria-current', 'page')
          } else if (menuItem.textContent === homeLinkLabel && currenPathname === '/') {
            menuItem.classList.add('is-active')
            menuItem.setAttribute('aria-current', 'page')
          }
        })
      })
    }

    const checkMenuSize = () => {
      const mainNavWidth = mainNav.getBoundingClientRect().width
      const desktopMenuWidth = document.querySelector('.desktop-menu').getBoundingClientRect().width
      const logoWidthBuffer = 300
      const totalMenuWidth = Math.round(desktopMenuWidth) + logoWidthBuffer

      if (totalMenuWidth >= mainNavWidth) {
        mainNav.classList.remove('is-desktop')
        mainNav.classList.add('is-mobile')
      } else if (totalMenuWidth <= mainNavWidth) {
        mainNav.classList.add('is-desktop')
        mainNav.classList.remove('is-mobile')
      }
    }

    const isOutOfViewport = (element) => {
      const elementBounds = element.getBoundingClientRect()
      return elementBounds.right > (window.innerWidth || document.documentElement.clientWidth)
    }

    const openDropdownMenu = (dropdownMenu) => {
      const dropdownList = dropdownMenu.parentNode.querySelector('ul')

      dropdownMenu.classList.add('show')
      dropdownMenu.setAttribute('aria-expanded', 'true')

      if (isOutOfViewport(dropdownList)) {
        dropdownList.style.left = 'auto'
      }
    }

    const closeDropdownMenu = (dropdownMenu) => {
      dropdownMenu.classList.remove('show')
      dropdownMenu.setAttribute('aria-expanded', 'false')
    }

    const closeAllDropdownMenus = () => {
      for (let i = 0; i < dropdownMenus.length; i++) {
        closeDropdownMenu(dropdownMenus[i])
      }
    }

    const toggleDropdownMenu = (event) => {
      if (event.target.getAttribute('aria-expanded') === 'false') {
        closeAllDropdownMenus()
        openDropdownMenu(event.target)
      } else {
        closeDropdownMenu(event.target)
      }
    }

    // execution
    mainMenu &&
      mainMenu.addEventListener('keydown', (event) => {
        const element = event.target as Element
        const currentMenuItem = element.closest('li')
        const menuItems = [...mainMenu.querySelectorAll('.menu-item')]
        const currentDropdownMenu = element.closest('.has-dropdown button')
        const currentDropdownMenuItem = element.closest('.has-dropdown li')
        const currentIndex = menuItems.findIndex((item) => item === currentMenuItem)

        const key = event.key
        let targetItem

        if (key === 'ArrowRight') {
          if (menuItems.indexOf(currentMenuItem) === menuItems.length - 1) {
            targetItem = menuItems[0]
          } else {
            targetItem = menuItems[currentIndex + 1]
          }
        }

        if (key === 'ArrowLeft') {
          if (menuItems.indexOf(currentMenuItem) === 0) {
            targetItem = menuItems[menuItems.length - 1]
          } else {
            targetItem = menuItems[currentIndex - 1]
          }
        }

        if (key === 'Escape') {
          targetItem = menuItems[0]
        }

        if (currentDropdownMenu) {
          const firstDropdownItem = currentDropdownMenu.nextElementSibling.querySelector('li')

          if (key === 'ArrowDown') {
            event.preventDefault()
            openDropdownMenu(currentDropdownMenu)
            targetItem = firstDropdownItem
          }

          if (key === 'Escape') {
            closeDropdownMenu(currentDropdownMenu)
          }
        }

        if (currentDropdownMenuItem) {
          const currentDropdownList = currentDropdownMenuItem.parentNode
          const dropdownMenuItems = [...currentDropdownList.querySelectorAll('li')]
          const currentIndex = dropdownMenuItems.findIndex((item) => item === currentDropdownMenuItem)

          if (key === 'ArrowDown') {
            event.preventDefault()

            if (dropdownMenuItems.indexOf(currentDropdownMenuItem as HTMLLIElement) === dropdownMenuItems.length - 1) {
              targetItem = dropdownMenuItems[0]
            } else {
              targetItem = dropdownMenuItems[currentIndex + 1]
            }
          }

          if (key === 'ArrowUp') {
            event.preventDefault()

            if (dropdownMenuItems.indexOf(currentDropdownMenuItem as HTMLLIElement) === 0) {
              targetItem = dropdownMenuItems[dropdownMenuItems.length - 1]
            } else {
              targetItem = dropdownMenuItems[currentIndex - 1]
            }
          }

          if (key === 'Escape') {
            const currentDropdownMenu = (currentDropdownList as Element).previousElementSibling
            targetItem = currentDropdownMenu.parentNode
            closeAllDropdownMenus()
          }

          if (key === 'Tab') {
            const currentDropdownMenu = (currentDropdownList as Element).previousElementSibling

            if (dropdownMenuItems.indexOf(currentDropdownMenuItem as HTMLLIElement) === dropdownMenuItems.length - 1) {
              closeDropdownMenu(currentDropdownMenu)
            }
          }
        }

        if (targetItem) {
          targetItem.querySelector('a, button, input').focus()
        }
      })

    dropdownMenus &&
      dropdownMenus.forEach((dropdownMenu) => {
        dropdownMenu.addEventListener('click', toggleDropdownMenu)
      })

    setActiveMenuItem()
    checkMenuSize()

    window.addEventListener('resize', checkMenuSize)
    window.addEventListener('click', (event) => {
      const element = event.target as Element
      if (!element.hasAttribute('aria-haspopup') && !element.classList.contains('submenu-item')) {
        closeAllDropdownMenus()
      }
    })
  })
</script>

<style lang="scss" is:global>
  @use '../assets/scss/base/breakpoint' as *;
  @use '../assets/scss/base/outline' as *;

  #main-navigation {
    > .container {
      display: flex;
      justify-content: space-between;
      flex-wrap: wrap;
    }

    &.is-desktop {
      .desktop-menu {
        visibility: visible;
        position: static;
      }

      .mobile-menu {
        display: none;
      }

      .darkmode-toggle {
        margin-top: -6px;
      }
    }

    &.is-mobile {
      flex-direction: column;

      .mobile-menu {
        display: none;

        &.show {
          display: block;
        }
      }

      .desktop-menu {
        visibility: hidden;
        z-index: -99;
        position: absolute;
        left: 0;
      }

      .responsive-toggle {
        display: block;
      }
    }

    .wrapper {
      display: flex;
      align-items: center;
      gap: 1rem;
    }
    nav {
      > ul {
        display: flex;
        gap: 1.5rem;
        list-style-type: none;

        a,
        button {
          color: var(--neutral-700);
          text-decoration: none;
          font-size: 1.125rem;
          line-height: 1.6875rem;
        }

        a:hover,
        a:focus,
        .is-active,
        .has-dropdown > button:hover,
        .has-dropdown > button:focus {
          color: var(--neutral-800);
          text-decoration: none;
          text-decoration-thickness: 1px;
          text-decoration-style: wavy;
          text-underline-offset: 7px;
        }

        .is-active {
          font-weight: bold;
        }
      }
    }

    .mobile-menu {
      flex-basis: 100%;
      padding: 2rem 0;

      > ul {
        flex-direction: column;

        ul {
          position: relative;
          margin-top: 1rem;
        }
      }

      a,
      button {
        display: block;
        width: 100%;
        padding: 0.5rem 0;
      }
    }

    .has-dropdown {
      position: relative;

      > button {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0;
        margin-top: -1px;
        border: none;
        color: var(--action-color);

        &:hover {
          color: var(--action-color-state);

          &::after {
            border-color: var(--action-color-state);
          }
        }

        &::after {
          content: '';
          width: 0.85rem;
          height: 0.75em;
          margin-top: -0.25rem;
          border-style: solid;
          border-width: 0.2em 0.2em 0 0;
          border-color: var(--action-color);
          transform: rotate(135deg);
        }

        &.show {
          &::after {
            margin-top: 0.25rem;
            transform: rotate(-45deg);
          }

          ~ ul {
            display: flex;
            flex-direction: column;
            gap: 1rem;
          }
        }
      }

      ul {
        display: none;
        position: absolute;
        z-index: 100;
        min-width: 260px;
        top: 125%;
        right: 0;
        bottom: auto;
        left: 0;
        padding: 1rem;
        background-color: var(--neutral-background);
        border: 2px solid black;
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.15);
      }
    }
  }

  .darkmode-toggle {
    padding: 0;
    border: none;

    svg {
      width: 30px;
      margin-top: 4px;
    }

    svg path {
      fill: var(--action-color);
    }

    &:hover {
      svg path {
        fill: var(--action-color-state);
      }
    }

    &:focus {
      @include outline;

      &:not(:focus-visible) {
        outline: none;
        box-shadow: none;
      }
    }
  }
</style>
